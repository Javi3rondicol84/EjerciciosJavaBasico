import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Random;

/*
 * 12. Suponer a partir de lo resuelto en el ejercicio anterior (11) que
el elemento a eliminar coincide con el último que hay en el arreglo.
¿Qué pasa en este caso? ¿Cómo daría una solución al problema?
 */


public class Tp05_Ej12 {


	public static int MAX = 10;
	public static int MAXVALOR = 9;
	public static int MINVALOR = 1;
	
	public static void main (String [] args) {
		
		int [] arr = new int[MAX];
		int num;
		
		BufferedReader entrada = new BufferedReader(new InputStreamReader(System.in));
		
		try {
			
			cargar_arreglo(arr);
			
			imprimir_arreglo(arr);
			
			System.out.println("Introduzca un numero, si se encuentra se elimina");
			num = Integer.valueOf(entrada.readLine());
			
			buscar_eliminar_ocurrencias(arr, num);
			
			imprimir_arreglo(arr);
		
		}
		catch(Exception exc) {
			
		}
		
	}
	
	public static void buscar_eliminar_ocurrencias(int [] arr, int num) {
		int indice = 0;
		
		while(indice < MAX) {
			
			if(arr[indice] == num) {
				
				corrimiento_izq(arr, indice);
				
				indice--;
			}
			
			
			indice++;
		}
		

		
	}
	
	public static void corrimiento_izq(int [] arr, int pos) {
		int indice = pos;
		
		while(indice < MAX-1) {
			
			arr[indice] = arr[indice+1];
			
			indice++;
		}
		
	}
	
	public static void cargar_arreglo(int [] arr) {
		
		Random r = new Random();
		int indice;
		indice = 0;
		
		while(indice < MAX) {
			
			arr[indice] = (r.nextInt(MAXVALOR-MINVALOR+1)+MINVALOR);
			
			indice++;
		}
		
	}
	
	public static void imprimir_arreglo(int [] arr) {
		
		int indice;
		indice = 0;
		
		System.out.println("Arreglo: ");
		while(indice < MAX) {
			
			System.out.print("["+arr[indice]+"]");
			
			indice++;
		}
		
		
	}
	
	
}
	

